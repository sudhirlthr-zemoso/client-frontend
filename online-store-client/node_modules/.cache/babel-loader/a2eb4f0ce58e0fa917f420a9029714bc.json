{"ast":null,"code":"var _jsxFileName = \"/home/zadmin/Desktop/zemosoAssignment/Client/online-store-client/src/utils/store-RouteAuth.jsx\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from 'react-router-dom';\nconst fakeAuth = {\n  isAuthenticated: false,\n\n  authenticate(cb) {\n    this.isAuthenticated = true;\n    setTimeout(cb, 100);\n  },\n\n  signout(cb) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n\n};\n\nconst Public = () => /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 22\n  }\n}, \"Public\");\n\nconst Protected = () => /*#__PURE__*/React.createElement(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }\n}, \"Protected\");\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirectToReferrer: false\n    };\n\n    this.login = () => {\n      fakeAuth.authenticate(() => {\n        this.setState(() => ({\n          redirectToReferrer: true\n        }));\n      });\n    };\n  }\n\n  render() {\n    const {\n      from\n    } = this.props.location.state || {\n      from: {\n        pathname: '/'\n      }\n    };\n    const {\n      redirectToReferrer\n    } = this.state;\n\n    if (redirectToReferrer === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: from,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"You must log in to view the page\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Log in\"));\n  }\n\n}\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => fakeAuth.isAuthenticated === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }\n}));\n\nconst AuthButton = withRouter(({\n  history\n}) => fakeAuth.isAuthenticated ? /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }\n}, \"Welcome! \", /*#__PURE__*/React.createElement(\"button\", {\n  onClick: () => {\n    fakeAuth.signout(() => history.push('/'));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 16\n  }\n}, \"Sign out\")) : /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }\n}, \"You are not logged in.\"));\nexport default function AuthExample() {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AuthButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Public Page\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/protected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Protected Page\"))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/public\",\n    component: Public,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/protected\",\n    component: Protected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/zadmin/Desktop/zemosoAssignment/Client/online-store-client/src/utils/store-RouteAuth.jsx"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","withRouter","fakeAuth","isAuthenticated","authenticate","cb","setTimeout","signout","Public","Protected","Login","Component","state","redirectToReferrer","login","setState","render","from","props","location","pathname","PrivateRoute","component","rest","AuthButton","history","push","AuthExample"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from 'react-router-dom'\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  authenticate(cb) {\n    this.isAuthenticated = true\n    setTimeout(cb, 100)\n  },\n  signout(cb) {\n    this.isAuthenticated = false\n    setTimeout(cb, 100)\n  }\n}\n\nconst Public = () => <h3>Public</h3>\nconst Protected = () => <h3>Protected</h3>\n\nclass Login extends React.Component {\n  state = {\n    redirectToReferrer: false\n  }\n  login = () => {\n    fakeAuth.authenticate(() => {\n      this.setState(() => ({\n        redirectToReferrer: true\n      }))\n    })\n  }\n  render() {\n    const { from } = this.props.location.state || { from: { pathname: '/' } }\n    const { redirectToReferrer } = this.state\n\n    if (redirectToReferrer === true) {\n      return <Redirect to={from} />\n    }\n\n    return (\n      <div>\n        <p>You must log in to view the page</p>\n        <button onClick={this.login}>Log in</button>\n      </div>\n    )\n  }\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    fakeAuth.isAuthenticated === true\n      ? <Component {...props} />\n      : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n  )} />\n)\n\nconst AuthButton = withRouter(({ history }) => (\n  fakeAuth.isAuthenticated ? (\n    <p>\n      Welcome! <button onClick={() => {\n        fakeAuth.signout(() => history.push('/'))\n      }}>Sign out</button>\n    </p>\n  ) : (\n    <p>You are not logged in.</p>\n  )\n))\n\nexport default function AuthExample () {\n  return (\n    <Router>\n      <div>\n        <AuthButton/>\n        <ul>\n          <li><Link to=\"/public\">Public Page</Link></li>\n          <li><Link to=\"/protected\">Protected Page</Link></li>\n        </ul>\n        <Route path=\"/public\" component={Public}/>\n        <Route path=\"/login\" component={Login}/>\n        <PrivateRoute path='/protected' component={Protected} />\n      </div>\n    </Router>\n  )\n}"]},"metadata":{},"sourceType":"module"}