{"ast":null,"code":"class EnsureLoggedInContainer extends React.Component {\n  componentDidMount() {\n    const {\n      dispatch,\n      currentURL\n    } = this.props;\n\n    if (!isLoggedIn) {\n      // set the current url/path for future redirection (we use a Redux action)\n      // then redirect (we use a React Router method)\n      dispatch(setRedirectUrl(currentURL));\n      browserHistory.replace(\"/login\");\n    }\n  }\n\n  render() {\n    if (isLoggedIn) {\n      return this.props.children;\n    } else {\n      return null;\n    }\n  }\n\n} // Grab a reference to the current URL. If this is a web app and you are\n// using React Router, you can use `ownProps` to find the URL. Other\n// platforms (Native) or routing libraries have similar ways to find\n// the current position in the app.\n\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    isLoggedIn: state.loggedIn,\n    currentURL: ownProps.location.pathname\n  };\n}\n\nexport default connect(mapStateToProps)(EnsureLoggedInContainer);","map":{"version":3,"sources":["/home/zadmin/Desktop/zemosoAssignment/Client/online-store-client/src/utils/store-RouteAuth.jsx"],"names":["EnsureLoggedInContainer","React","Component","componentDidMount","dispatch","currentURL","props","isLoggedIn","setRedirectUrl","browserHistory","replace","render","children","mapStateToProps","state","ownProps","loggedIn","location","pathname","connect"],"mappings":"AAAA,MAAMA,uBAAN,SAAsCC,KAAK,CAACC,SAA5C,CAAsD;AACpDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA2B,KAAKC,KAAtC;;AAEA,QAAI,CAACC,UAAL,EAAiB;AACf;AACA;AACAH,MAAAA,QAAQ,CAACI,cAAc,CAACH,UAAD,CAAf,CAAR;AACAI,MAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIJ,UAAJ,EAAgB;AACd,aAAO,KAAKD,KAAL,CAAWM,QAAlB;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AAlBmD,C,CAqBtD;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,SAAO;AACLR,IAAAA,UAAU,EAAEO,KAAK,CAACE,QADb;AAELX,IAAAA,UAAU,EAAEU,QAAQ,CAACE,QAAT,CAAkBC;AAFzB,GAAP;AAID;;AAED,eAAeC,OAAO,CAACN,eAAD,CAAP,CAAyBb,uBAAzB,CAAf","sourcesContent":["class EnsureLoggedInContainer extends React.Component {\n  componentDidMount() {\n    const { dispatch, currentURL } = this.props\n\n    if (!isLoggedIn) {\n      // set the current url/path for future redirection (we use a Redux action)\n      // then redirect (we use a React Router method)\n      dispatch(setRedirectUrl(currentURL))\n      browserHistory.replace(\"/login\")\n    }\n  }\n\n  render() {\n    if (isLoggedIn) {\n      return this.props.children\n    } else {\n      return null\n    }\n  }\n}\n\n// Grab a reference to the current URL. If this is a web app and you are\n// using React Router, you can use `ownProps` to find the URL. Other\n// platforms (Native) or routing libraries have similar ways to find\n// the current position in the app.\nfunction mapStateToProps(state, ownProps) {\n  return {\n    isLoggedIn: state.loggedIn,\n    currentURL: ownProps.location.pathname\n  }\n}\n\nexport default connect(mapStateToProps)(EnsureLoggedInContainer)"]},"metadata":{},"sourceType":"module"}